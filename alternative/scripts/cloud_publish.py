#!/usr/bin/python
import numpy as np 
import rospy
from geometry_msgs.msg import Point
from sensor_msgs.msg import PointCloud
class CloudPublisher:
    def __init__(self):
        self.pubs=rospy.Publisher("cloud", PointCloud, queue_size=10)
        self.pubcall()
    def pubcall(self):
        path=[(-25.59100000000001, -12.36), (-24.79100000000001, -13.16), (-23.99100000000001, -13.96), (-23.19100000000001, -14.760000000000002), (-22.39100000000001, -15.560000000000002), (-21.591000000000008, -16.360000000000003), (-20.791000000000007, -16.360000000000003), (-19.991000000000007, -16.360000000000003), (-19.191000000000006, -16.360000000000003), (-18.391000000000005, -16.360000000000003), (-17.591000000000005, -16.360000000000003), (-16.791000000000004, -16.360000000000003), (-15.991000000000005, -16.360000000000003), (-15.191000000000004, -16.360000000000003), (-14.391000000000004, -16.360000000000003), (-13.591000000000003, -16.360000000000003), (-12.791000000000002, -16.360000000000003), (-11.991000000000001, -16.360000000000003), (-11.191, -16.360000000000003), (-10.391, -16.360000000000003), (-9.591, -16.360000000000003), (-8.790999999999999, -16.360000000000003), (-7.990999999999999, -16.360000000000003), (-7.190999999999999, -16.360000000000003), (-6.390999999999999, -16.360000000000003), (-5.590999999999999, -16.360000000000003), (-4.7909999999999995, -15.560000000000002), (-3.9909999999999997, -14.760000000000002), (-3.191, -13.96)]
        while not rospy.is_shutdown():
            time=rospy.Time.now()   
            cloud=PointCloud()
            cloud.header.frame_id="map"
            cloud.header.stamp=time
            for i in range(len(path)-1):
                point=Point()
                point.x=path[i][0]
                point.y=path[i][1]
                point.z=0.0
                cloud.points.append(point);
            self.pubs.publish(cloud)
if __name__ == "__main__":
    rospy.init_node("CloudPublisher")
    node=CloudPublisher()
    rospy.spin()